# 워크플로우 이름
name: Deploy to GitHub Pages

# 워크플로우 실행 조건
on:
  # 'main' 브랜치에 푸시될 때 실행
  push:
    branches: [ "main" ]
  # Actions 탭에서 수동으로 실행 가능
  workflow_dispatch:

# 워크플로우 실행에 필요한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시성 제어: 동일 브랜치의 이전 실행은 취소하고 마지막 커밋만 배포
concurrency:
  group: "pages"
  cancel-in-progress: true

# 워크플로우 작업(Job) 정의
jobs:
  # 배포 작업을 정의
  deploy:
    # GitHub Pages 환경을 사용하도록 설정
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # 최신 Ubuntu 환경에서 실행
    runs-on: ubuntu-latest
    # 작업 단계(Steps)
    steps:
      # 1. 리포지토리 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. GitHub Pages 설정
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 3. 프로젝트 파일 준비 (빌드)
      # React, Vue 등 별도 빌드가 필요하면 'run' 항목에 해당 명령어를 작성하세요.
      - name: Build project
        run: |
          # rsync를 사용해 배포에 불필요한 폴더(.git, .github)를 제외하고
          # 모든 파일을 '_site' 폴더로 복사합니다.
          rsync -av --exclude '.git*' --exclude '.github' --exclude '_site' ./ _site

      # 4. 배포용 아티팩트(결과물) 업로드
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # '_site' 폴더를 업로드 대상으로 지정
          path: './_site'

      # 5. GitHub Pages에 배포
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
